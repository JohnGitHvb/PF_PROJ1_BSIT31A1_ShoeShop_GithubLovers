// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoeShop.Repository;

#nullable disable

namespace ShoeShop.Repository.Migrations
{
    [DbContext(typeof(ShoeShopDbContext))]
    [Migration("20251004084024_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("ShoeShop.Repository.Entities.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.PurchaseOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityOrdered")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityReceived")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShoeColorVariationId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("ShoeColorVariationId");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.Shoe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Shoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Nike",
                            Cost = 85.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comfortable running shoes with air cushioning",
                            IsActive = true,
                            Name = "Air Max 270",
                            Price = 150.00m
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Adidas",
                            Cost = 95.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Energy-returning running shoes",
                            IsActive = true,
                            Name = "Ultra Boost 22",
                            Price = 180.00m
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Puma",
                            Cost = 45.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Iconic suede sneakers",
                            IsActive = true,
                            Name = "Suede Classic",
                            Price = 80.00m
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Nike",
                            Cost = 120.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic basketball shoes",
                            IsActive = true,
                            Name = "Air Jordan 1",
                            Price = 200.00m
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Adidas",
                            Cost = 60.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic shell-toe design",
                            IsActive = true,
                            Name = "Superstar",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Puma",
                            Cost = 70.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bold and chunky sneakers",
                            IsActive = true,
                            Name = "RS-X",
                            Price = 120.00m
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Nike",
                            Cost = 50.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Retro running shoes",
                            IsActive = true,
                            Name = "Cortez",
                            Price = 90.00m
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Adidas",
                            Cost = 55.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Minimalist tennis shoes",
                            IsActive = true,
                            Name = "Stan Smith",
                            Price = 95.00m
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Puma",
                            Cost = 80.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Performance basketball shoes",
                            IsActive = true,
                            Name = "Clyde Court",
                            Price = 140.00m
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Nike",
                            Cost = 65.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic high-top sneakers",
                            IsActive = true,
                            Name = "Blazer Mid",
                            Price = 110.00m
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Adidas",
                            Cost = 90.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Modern nomad sneakers",
                            IsActive = true,
                            Name = "NMD R1",
                            Price = 160.00m
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Puma",
                            Cost = 55.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Retro-futuristic running shoes",
                            IsActive = true,
                            Name = "Future Rider",
                            Price = 95.00m
                        },
                        new
                        {
                            Id = 13,
                            Brand = "Nike",
                            Cost = 75.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Versatile skateboarding shoes",
                            IsActive = true,
                            Name = "Dunk Low",
                            Price = 130.00m
                        },
                        new
                        {
                            Id = 14,
                            Brand = "Adidas",
                            Cost = 150.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Premium lifestyle sneakers",
                            IsActive = true,
                            Name = "Yeezy Boost 350",
                            Price = 250.00m
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Puma",
                            Cost = 60.00m,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Motorsport-inspired shoes",
                            IsActive = true,
                            Name = "Speedcat",
                            Price = 105.00m
                        });
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.ShoeColorVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("HexCode")
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShoeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShoeId");

                    b.ToTable("ShoeColorVariations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorName = "Black",
                            HexCode = "#000000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 1,
                            StockQuantity = 25
                        },
                        new
                        {
                            Id = 2,
                            ColorName = "White",
                            HexCode = "#FFFFFF",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 1,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 3,
                            ColorName = "Red",
                            HexCode = "#FF0000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 1,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 4,
                            ColorName = "Blue",
                            HexCode = "#0000FF",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 2,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 5,
                            ColorName = "Grey",
                            HexCode = "#808080",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 2,
                            StockQuantity = 18
                        },
                        new
                        {
                            Id = 6,
                            ColorName = "Navy",
                            HexCode = "#000080",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 3,
                            StockQuantity = 12
                        },
                        new
                        {
                            Id = 7,
                            ColorName = "Red",
                            HexCode = "#FF0000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 3,
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 8,
                            ColorName = "Chicago Red",
                            HexCode = "#CD5C5C",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 4,
                            StockQuantity = 8
                        },
                        new
                        {
                            Id = 9,
                            ColorName = "Black",
                            HexCode = "#000000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 4,
                            StockQuantity = 3
                        },
                        new
                        {
                            Id = 10,
                            ColorName = "White",
                            HexCode = "#FFFFFF",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 5,
                            StockQuantity = 35
                        },
                        new
                        {
                            Id = 11,
                            ColorName = "Black",
                            HexCode = "#000000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 5,
                            StockQuantity = 22
                        },
                        new
                        {
                            Id = 12,
                            ColorName = "Multi",
                            HexCode = "#FF6347",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 6,
                            StockQuantity = 14
                        },
                        new
                        {
                            Id = 13,
                            ColorName = "White/Red",
                            HexCode = "#FFFFFF",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 7,
                            StockQuantity = 16
                        },
                        new
                        {
                            Id = 14,
                            ColorName = "White/Green",
                            HexCode = "#FFFFFF",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 8,
                            StockQuantity = 28
                        },
                        new
                        {
                            Id = 15,
                            ColorName = "Black",
                            HexCode = "#000000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 9,
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 16,
                            ColorName = "White",
                            HexCode = "#FFFFFF",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 10,
                            StockQuantity = 20
                        },
                        new
                        {
                            Id = 17,
                            ColorName = "Black/Blue",
                            HexCode = "#000000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 11,
                            StockQuantity = 15
                        },
                        new
                        {
                            Id = 18,
                            ColorName = "Grey/Yellow",
                            HexCode = "#808080",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 12,
                            StockQuantity = 18
                        },
                        new
                        {
                            Id = 19,
                            ColorName = "Panda",
                            HexCode = "#000000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 13,
                            StockQuantity = 5
                        },
                        new
                        {
                            Id = 20,
                            ColorName = "Cream",
                            HexCode = "#FFFDD0",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 14,
                            StockQuantity = 4
                        },
                        new
                        {
                            Id = 21,
                            ColorName = "Black/Red",
                            HexCode = "#000000",
                            IsActive = true,
                            ReorderLevel = 5,
                            ShoeId = 15,
                            StockQuantity = 12
                        });
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.StockPullOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PullOutDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonDetails")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ShoeColorVariationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShoeColorVariationId");

                    b.ToTable("StockPullOuts");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Nike Street, Portland, OR",
                            ContactEmail = "orders@nikewholesale.com",
                            ContactPhone = "555-0101",
                            IsActive = true,
                            Name = "Nike Wholesale"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Adidas Ave, Portland, OR",
                            ContactEmail = "sales@adidascorp.com",
                            ContactPhone = "555-0102",
                            IsActive = true,
                            Name = "Adidas Distribution"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Puma Blvd, Portland, OR",
                            ContactEmail = "info@pumaint.com",
                            ContactPhone = "555-0103",
                            IsActive = true,
                            Name = "Puma International"
                        });
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("ShoeShop.Repository.Entities.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.PurchaseOrderItem", b =>
                {
                    b.HasOne("ShoeShop.Repository.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("OrderItems")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoeShop.Repository.Entities.ShoeColorVariation", "ShoeColorVariation")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("ShoeColorVariationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PurchaseOrder");

                    b.Navigation("ShoeColorVariation");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.ShoeColorVariation", b =>
                {
                    b.HasOne("ShoeShop.Repository.Entities.Shoe", "Shoe")
                        .WithMany("ColorVariations")
                        .HasForeignKey("ShoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shoe");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.StockPullOut", b =>
                {
                    b.HasOne("ShoeShop.Repository.Entities.ShoeColorVariation", "ShoeColorVariation")
                        .WithMany("StockPullOuts")
                        .HasForeignKey("ShoeColorVariationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ShoeColorVariation");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.PurchaseOrder", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.Shoe", b =>
                {
                    b.Navigation("ColorVariations");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.ShoeColorVariation", b =>
                {
                    b.Navigation("PurchaseOrderItems");

                    b.Navigation("StockPullOuts");
                });

            modelBuilder.Entity("ShoeShop.Repository.Entities.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
