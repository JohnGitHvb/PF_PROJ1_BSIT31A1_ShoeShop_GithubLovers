@model ShoeShop.Web.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="page-header">
    <h2><i class="fas fa-chart-line"></i> Dashboard Overview</h2>
    <p>Welcome to your shoe inventory management system</p>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card primary">
            <div class="icon">
                <i class="fas fa-shoe-prints"></i>
            </div>
            <h3>@Model.TotalShoes</h3>
            <p class="text-muted mb-0">Total Shoe Models</p>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card success">
            <div class="icon">
                <i class="fas fa-boxes"></i>
            </div>
            <h3>@Model.TotalStock</h3>
            <p class="text-muted mb-0">Total Stock Items</p>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card warning">
            <div class="icon">
                <i class="fas fa-dollar-sign"></i>
            </div>
            <h3>$@Model.TotalInventoryValue.ToString("N2")</h3>
            <p class="text-muted mb-0">Inventory Value</p>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 mb-3">
        <div class="stat-card danger">
            <div class="icon">
                <i class="fas fa-exclamation-triangle"></i>
            </div>
            <h3>@Model.LowStockCount</h3>
            <p class="text-muted mb-0">Low Stock Alerts</p>
        </div>
    </div>
</div>

<!-- Action Cards -->
<div class="row mb-4">
    <div class="col-md-6 mb-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center p-4">
                <i class="fas fa-shopping-cart fa-3x text-primary mb-3"></i>
                <h5>Pending Purchase Orders</h5>
                <h2 class="text-primary">@Model.PendingOrdersCount</h2>
                <a asp-controller="PurchaseOrder" asp-action="Index" class="btn btn-primary btn-custom mt-2">
                    <i class="fas fa-eye"></i> View Orders
                </a>
            </div>
        </div>
    </div>
    <div class="col-md-6 mb-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center p-4">
                <i class="fas fa-arrow-circle-down fa-3x text-warning mb-3"></i>
                <h5>Pending Pull-Out Requests</h5>
                <h2 class="text-warning">@Model.PendingPullOutsCount</h2>
                <a asp-controller="PullOut" asp-action="Index" class="btn btn-warning btn-custom mt-2">
                    <i class="fas fa-eye"></i> View Requests
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Low Stock Items -->
@if (Model.LowStockItems.Any())
{
    <div class="card table-custom mb-4">
        <div class="card-header bg-danger text-white">
            <h5 class="mb-0"><i class="fas fa-exclamation-triangle"></i> Low Stock Alert</h5>
        </div>
        <div class="card-body p-0">
            <table class="table table-hover mb-0">
                <thead class="bg-danger">
                    <tr>
                        <th>Shoe</th>
                        <th>Color</th>
                        <th>Current Stock</th>
                        <th>Reorder Level</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.LowStockItems.Take(10))
                    {
                        <tr>
                            <td><strong>@item.ShoeName</strong> <small class="text-muted">(@item.Brand)</small></td>
                            <td>
                                <span class="badge badge-custom" style="background-color: @item.HexCode; color: white;">
                                    @item.ColorName
                                </span>
                            </td>
                            <td><span class="badge bg-danger">@item.StockQuantity</span></td>
                            <td>@item.ReorderLevel</td>
                            <td>
                                <a asp-controller="PurchaseOrder" asp-action="Create" class="btn btn-sm btn-primary">
                                    <i class="fas fa-plus"></i> Reorder
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<!-- Recent Activities -->
<div class="row">
    <!-- Recent Purchase Orders -->
    <div class="col-lg-6 mb-4">
        <div class="card table-custom">
            <div class="card-header" style="background-color: var(--primary-color); color: white;">
                <h5 class="mb-0"><i class="fas fa-shopping-cart"></i> Recent Purchase Orders</h5>
            </div>
            <div class="card-body p-0">
                @if (Model.RecentPurchaseOrders.Any())
                {
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Order #</th>
                                <th>Supplier</th>
                                <th>Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.RecentPurchaseOrders)
                            {
                                <tr>
                                    <td><strong>@order.OrderNumber</strong></td>
                                    <td>@order.SupplierName</td>
                                    <td>@order.OrderDate.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        @{
                                            var statusClass = order.Status.ToString() switch
                                            {
                                                "Pending" => "bg-warning",
                                                "Confirmed" => "bg-info",
                                                "Shipped" => "bg-primary",
                                                "Received" => "bg-success",
                                                "Cancelled" => "bg-danger",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @statusClass">@order.StatusDisplay</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="p-4 text-center text-muted">
                        <i class="fas fa-inbox fa-2x mb-2"></i>
                        <p>No recent purchase orders</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Recent Pull-Outs -->
    <div class="col-lg-6 mb-4">
        <div class="card table-custom">
            <div class="card-header" style="background-color: var(--primary-color); color: white;">
                <h5 class="mb-0"><i class="fas fa-arrow-circle-down"></i> Recent Pull-Outs</h5>
            </div>
            <div class="card-body p-0">
                @if (Model.RecentPullOuts.Any())
                {
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Shoe</th>
                                <th>Quantity</th>
                                <th>Reason</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pullOut in Model.RecentPullOuts)
                            {
                                <tr>
                                    <td>
                                        <strong>@pullOut.ShoeName</strong><br />
                                        <small class="text-muted">@pullOut.ColorName</small>
                                    </td>
                                    <td>@pullOut.Quantity</td>
                                    <td><small>@pullOut.Reason</small></td>
                                    <td>
                                        @{
                                            var pullOutStatusClass = pullOut.Status.ToString() switch
                                            {
                                                "Pending" => "bg-warning",
                                                "Approved" => "bg-info",
                                                "Completed" => "bg-success",
                                                "Rejected" => "bg-danger",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @pullOutStatusClass">@pullOut.StatusDisplay</span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="p-4 text-center text-muted">
                        <i class="fas fa-inbox fa-2x mb-2"></i>
                        <p>No recent pull-out requests</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>